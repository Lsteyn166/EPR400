\subsubsection{Software design}
\label{sec:soft}
This section contains a summary of the development process for the software algorithm implemented in both the simulations discussed in section \ref{sec:sim} and the final embedded software implementation.\\

If all of the legs are moved and lifted together the feet would stay in exactly the same position while the body moves in a circular pattern. The key to taking steps and therefore walking is lifting only one leg and moving it while the other legs remain in position. The trajectories calculated in section \ref{sec:theory} will be used and broken into smaller steps which are executed in fixed intervals to maintain a specific speed. 

Figure \ref{fig:Soft1} attempts to explain the rough algorithm used to reset the legs and therefore the algorithm required for walking. This is the algorithm implemented in the Python program for simulation without the plotting functions.

\begin{figure}[H]
\centering
\includegraphics[scale = 1]{pics/Soft1.pdf}
\caption{Flow diagram showing robot walking algorithm.}
\label{fig:Soft1}
\end{figure}

While this is the core of the algorithm, some additional functions need to be included to make provision for some conditions. These are:
\begin{itemize}
\item Power is turned on initially.
\item Power is lost while in operation.
\item Power is regained.
\item Bluetooth is initially connected.
\item Bluetooth is suddenly disconnected.
\end{itemize}

A more complete diagram illustrating the design implemented on the microcontroller can be seen in Figure \ref{fig:Soft2}.\\

Servos are controlled with a square pulse with a specific width. The standard for hobbyist servo motors with a $180^o$ movement range is that a high pulse of $1ms$ equates to $0^o$ while $2ms$ results in $180^o$. The period of this signal is $20ms$.\\

A typical set of control signals for an analogue servo motor can be seen in figure \ref{fig:Servo1}.

\begin{figure}[H]
\centering
\includegraphics[scale = 1]{pics/Servo1.pdf}
\caption{Illustration of the working of a traditional servo control signal.}
\label{fig:Servo1}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[scale = 1]{pics/Soft2.pdf}
\caption{Flow diagram showing robot walking algorithm final implementation.}
\label{fig:Soft2}
\end{figure}

In order to control the 15 servo motors on the robot simultaneously, 15 independent control signals like the ones shown in Figure \ref{fig:Servo1}. A common way to do this is to use the microcontroller's built-in pulse width modulation (PWM) module with a fixed frequency and variable duty cycle. While this is a valid approach for most cases, most microcontrollers don't have nearly enough 


\subsubsection{Software implementation}